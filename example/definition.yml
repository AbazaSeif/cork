version: 1
# Each cork container
# has the following
#
# stages
#   - a default stage must be specified

# Define the stages
#
# Each stage has a set of steps
# 
# Types of steps:
#   * container 
#       * Runs a container against the current working directory
#   * command 
#       * Calls a command from the CORK_DIR/commands directory
#   * export 
#       * Exports a variable at the end of this run. This can be output
#         to stdout or if a cork-agent is running it will be used to
#         chain multiple cork jobs together
#   * stage
#       * Calls another stage
stages:
  validate:
    - name: lint
      type: container
      args:
        image: virtrudocker.io/node-lint:v1
        command: "/usr/sbin/some-command-on-that-server"
      match_tags:
        - ci
    
    - name: security 
      type: container
      args:
        image: virtrudocker.io/node-security:v1
      match_tags:
        - ci

  build:
    - type: stage
      args:
        stage: validate

    - name: build_container
      type: command
      args:
        command: build
        outputs: 
          - app_image

    # Export a key/value from this cork stage
    - type: export
      args:
        export:
          name: app_image
          value: '{{ outputs "build_container.app_image" }}'

  test:
    - type: stage
      args:
        stage: build

    - name: test
      type: command
      args:
        command: test
        params:
          app_image: '{{ outputs "build_container.app_image" }}'

  default:
    - type: stage
      args:
        stage: test

# Used when chaining cork containers
tags:
  - docker
  - project_type:node4

# Used to list volumes to mount. You can use {{ VAR_NAME }} with the following variables
# 
#  HOST_CACHE_DIR - The host's caching directory
#  HOST_WORK_DIR - The working directory on the host
#  WORK_DIR - The working directory on the container
volumes:
   - '{{ HOST_CACHE_DIR }}/node_modules:{{ WORK_DIR }}/node_modules'