syntax = "proto3";

message Empty {
}

message Response {
    uint32 status = 1;
    oneof res {
        Empty empty = 2;
        StepListResponse steps = 3;
        VolumesToMountGetResponse volumes = 4;
    }
}

service CorkTypeService {
    // Status endpoint
    rpc Status(StatusRequest) returns (Response) {};
    
    // Kills the cork server
    rpc Kill(KillRequest) returns (Response) {};

    // Gets the configuration of volumes to mount for this cork server
    rpc VolumesToMountGet(VolumesToMountGetRequest) returns (Response) {};

    // Executes a specific stage
    rpc StageExecute(StageExecuteRequest) returns (stream ExecuteEvent) {};

    // React to an event
    rpc EventReact(EventReactRequest) returns (Response) {};
}

message KillRequest {
}

message StatusRequest {
}

message ExecuteEvent {
    string type = 1;
    oneof body {
        Empty empty = 2;
        EndEvent end = 3;
        OutputEvent output = 4;
        ExportEvent export = 5;
        ErrorEvent error = 6;
    }
}

message EndEvent {
    repeated string tags = 1;
}

message ErrorEvent {
    string message = 1;
}

message ExportEvent {
    string name = 1;
    string value = 2;
}

message OutputEvent {
    bytes bytes = 1;
    string stream = 2;
}

message StepExecuteRequest {
    string stepName = 1;
}

message Step {
    string name = 1;
}

message StepListResponse {
    repeated Step step = 1;
}

message VolumesToMountGetRequest {
}

message VolumesToMountGetResponse {
    repeated string volumes = 1;
}

message StageExecuteRequest {
    string stage = 1;
}

message EventReactRequest {
    string project = 1;
    repeated string tags = 2;
    map<string,string> outputs = 3;
}